{"ast":null,"code":"var _jsxFileName = \"/Users/NicRockwood/Desktop/electio-app/frontend/src/components/electio-carousel/electio-carousel-item/electio-carousel-item.tsx\";\nimport * as React from 'react';\nimport { getCarouselInfoDetails, getNavigationSwipeRoutePaths, getSwipeTypeTitleIcons, getTooltipSwipeTitles, SwipeType } from '../electio-carousel.types';\nimport { Button, Card, CardContent, CardHeader, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const indexSwipeTypeRef = [SwipeType.RemoteDuo, SwipeType.ShareScreenDuo, SwipeType.SoloSpeedRound, SwipeType.LoveItOrLoseIt, SwipeType.CuratedList, SwipeType.DealersChoice];\nexport const ElectioCarouselItem = _ref => {\n  let {\n    slideContentIndex\n  } = _ref;\n  const swipeTypeTitle = indexSwipeTypeRef[slideContentIndex];\n  const swipeTypeCopy = getCarouselInfoDetails()[swipeTypeTitle];\n  const swipeTypeTitleText = getTooltipSwipeTitles()[swipeTypeTitle];\n  const swipeTypeTitleIcon = getSwipeTypeTitleIcons()[swipeTypeTitle];\n  const currentRoute = getNavigationSwipeRoutePaths()[swipeTypeTitle];\n  const handleRenderButton = () => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      href: currentRoute,\n      sx: {\n        background: 'transparent',\n        border: 'none'\n      },\n      children: \"Swipe Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 345\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      avatar: swipeTypeTitleIcon,\n      sx: {\n        height: '3rem',\n        textAlign: 'left'\n      },\n      title: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: swipeTypeTitleText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        borderBottom: '1px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        sx: {\n          textAlign: 'left'\n        },\n        children: swipeTypeCopy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_c = ElectioCarouselItem;\nvar _c;\n$RefreshReg$(_c, \"ElectioCarouselItem\");","map":{"version":3,"names":["React","getCarouselInfoDetails","getNavigationSwipeRoutePaths","getSwipeTypeTitleIcons","getTooltipSwipeTitles","SwipeType","Button","Card","CardContent","CardHeader","Typography","jsxDEV","_jsxDEV","indexSwipeTypeRef","RemoteDuo","ShareScreenDuo","SoloSpeedRound","LoveItOrLoseIt","CuratedList","DealersChoice","ElectioCarouselItem","_ref","slideContentIndex","swipeTypeTitle","swipeTypeCopy","swipeTypeTitleText","swipeTypeTitleIcon","currentRoute","handleRenderButton","variant","href","sx","background","border","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","avatar","height","textAlign","title","borderBottom","color","_c","$RefreshReg$"],"sources":["/Users/NicRockwood/Desktop/electio-app/frontend/src/components/electio-carousel/electio-carousel-item/electio-carousel-item.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport { ContainerCardStatic } from '../../common/container-card-static/container-card-static'\nimport { ContentPanelItem } from '../../common/content-panel-item'\nimport {\n  getCarouselInfoDetails,\n  getNavigationSwipeRoutePaths,\n  getSwipeTypeTitleIcons,\n  getTooltipSwipeTitles,\n  SwipeType,\n} from '../electio-carousel.types'\nimport {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  Link,\n  Typography,\n} from '@mui/material'\n\nexport interface ElectioCarouselItemProps {\n  slideContentIndex: number\n}\n\nexport const indexSwipeTypeRef = [\n  SwipeType.RemoteDuo,\n  SwipeType.ShareScreenDuo,\n  SwipeType.SoloSpeedRound,\n  SwipeType.LoveItOrLoseIt,\n  SwipeType.CuratedList,\n  SwipeType.DealersChoice,\n]\n\nexport const ElectioCarouselItem: React.FC<ElectioCarouselItemProps> = ({\n  slideContentIndex,\n}: ElectioCarouselItemProps) => {\n  const swipeTypeTitle = indexSwipeTypeRef[slideContentIndex]\n  const swipeTypeCopy = getCarouselInfoDetails()[swipeTypeTitle]\n  const swipeTypeTitleText = getTooltipSwipeTitles()[swipeTypeTitle]\n  const swipeTypeTitleIcon = getSwipeTypeTitleIcons()[swipeTypeTitle]\n  const currentRoute = getNavigationSwipeRoutePaths()[swipeTypeTitle]\n\n  const handleRenderButton = () => {\n    return (\n      <Button\n        variant=\"outlined\"\n        href={currentRoute}\n        sx={{ background: 'transparent', border: 'none' }}\n      >\n        Swipe Now\n      </Button>\n    )\n  }\n\n  return (\n    <Card sx={{ maxWidth: 345 }}>\n      <CardHeader\n        avatar={swipeTypeTitleIcon}\n        sx={{ height: '3rem', textAlign: 'left' }}\n        title={<Typography variant=\"h5\">{swipeTypeTitleText}</Typography>}\n      />\n      <CardContent sx={{borderBottom: '1px'}}>\n        <Typography\n          variant=\"body1\"\n          color=\"text.secondary\"\n          sx={{ textAlign: 'left' }}\n        >\n          {swipeTypeCopy}\n        </Typography>\n      </CardContent>\n      {/**<CardActions>\n        <Button size=\"small\">Share</Button>\n        <Button size=\"small\">Learn More</Button>\n  </CardActions>**/}\n    </Card>\n  )\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAI9B,SACEC,sBAAsB,EACtBC,4BAA4B,EAC5BC,sBAAsB,EACtBC,qBAAqB,EACrBC,SAAS,QACJ,2BAA2B;AAClC,SAEEC,MAAM,EACNC,IAAI,EAEJC,WAAW,EACXC,UAAU,EAGVC,UAAU,QACL,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMtB,OAAO,MAAMC,iBAAiB,GAAG,CAC/BR,SAAS,CAACS,SAAS,EACnBT,SAAS,CAACU,cAAc,EACxBV,SAAS,CAACW,cAAc,EACxBX,SAAS,CAACY,cAAc,EACxBZ,SAAS,CAACa,WAAW,EACrBb,SAAS,CAACc,aAAa,CACxB;AAED,OAAO,MAAMC,mBAAuD,GAAGC,IAAA,IAEvC;EAAA,IAFwC;IACtEC;EACwB,CAAC,GAAAD,IAAA;EACzB,MAAME,cAAc,GAAGV,iBAAiB,CAACS,iBAAiB,CAAC;EAC3D,MAAME,aAAa,GAAGvB,sBAAsB,EAAE,CAACsB,cAAc,CAAC;EAC9D,MAAME,kBAAkB,GAAGrB,qBAAqB,EAAE,CAACmB,cAAc,CAAC;EAClE,MAAMG,kBAAkB,GAAGvB,sBAAsB,EAAE,CAACoB,cAAc,CAAC;EACnE,MAAMI,YAAY,GAAGzB,4BAA4B,EAAE,CAACqB,cAAc,CAAC;EAEnE,MAAMK,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,oBACEhB,OAAA,CAACN,MAAM;MACLuB,OAAO,EAAC,UAAU;MAClBC,IAAI,EAAEH,YAAa;MACnBI,EAAE,EAAE;QAAEC,UAAU,EAAE,aAAa;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAC,QAAA,EACnD;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAEb,CAAC;EAED,oBACE1B,OAAA,CAACL,IAAI;IAACwB,EAAE,EAAE;MAAEQ,QAAQ,EAAE;IAAI,CAAE;IAAAL,QAAA,gBAC1BtB,OAAA,CAACH,UAAU;MACT+B,MAAM,EAAEd,kBAAmB;MAC3BK,EAAE,EAAE;QAAEU,MAAM,EAAE,MAAM;QAAEC,SAAS,EAAE;MAAO,CAAE;MAC1CC,KAAK,eAAE/B,OAAA,CAACF,UAAU;QAACmB,OAAO,EAAC,IAAI;QAAAK,QAAA,EAAET;MAAkB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAe;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClE,eACF1B,OAAA,CAACJ,WAAW;MAACuB,EAAE,EAAE;QAACa,YAAY,EAAE;MAAK,CAAE;MAAAV,QAAA,eACrCtB,OAAA,CAACF,UAAU;QACTmB,OAAO,EAAC,OAAO;QACfgB,KAAK,EAAC,gBAAgB;QACtBd,EAAE,EAAE;UAAEW,SAAS,EAAE;QAAO,CAAE;QAAAR,QAAA,EAEzBV;MAAa;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAKT;AAEX,CAAC;AAAAQ,EAAA,GA3CY1B,mBAAuD;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}