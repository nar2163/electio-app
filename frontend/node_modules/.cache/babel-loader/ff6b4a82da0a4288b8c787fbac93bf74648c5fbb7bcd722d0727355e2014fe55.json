{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/NicRockwood/node_modules/react-inlinesvg/src/types.ts"],"sourcesContent":["import * as React from 'react';\n\nexport type ErrorCallback = (error: Error | FetchError) => void;\nexport type LoadCallback = (src: string, isCached: boolean) => void;\nexport type PlainObject<T = unknown> = Record<string | number | symbol, T>;\nexport type PreProcessorCallback = (code: string) => string;\n\nexport interface Props extends Omit<React.SVGProps<SVGElement>, 'onLoad' | 'onError' | 'ref'> {\n  baseURL?: string;\n  cacheRequests?: boolean;\n  children?: React.ReactNode;\n  description?: string;\n  fetchOptions?: RequestInit;\n  innerRef?: React.Ref<SVGElement>;\n  loader?: React.ReactNode;\n  onError?: ErrorCallback;\n  onLoad?: LoadCallback;\n  preProcessor?: PreProcessorCallback;\n  src: string;\n  title?: string;\n  uniqueHash?: string;\n  uniquifyIDs?: boolean;\n}\n\nexport interface State {\n  content: string;\n  element: React.ReactNode;\n  hasCache: boolean;\n  status: string;\n}\n\nexport interface FetchError extends Error {\n  code: string;\n  errno: string;\n  message: string;\n  type: string;\n}\n\nexport interface StorageItem {\n  content: string;\n  status: string;\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}