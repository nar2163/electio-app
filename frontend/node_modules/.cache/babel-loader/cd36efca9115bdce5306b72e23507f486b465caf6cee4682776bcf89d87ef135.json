{"ast":null,"code":"var _jsxFileName = \"/Users/NicRockwood/Desktop/electio-app/frontend/src/components/electio-carousel/electio-carousel-item/electio-carousel-item.tsx\";\nimport * as React from 'react';\nimport { getCarouselInfoDetails, getNavigationSwipeRoutePaths, getSwipeTypeTitleIcons, getTooltipSwipeTitles, SwipeType } from '../electio-carousel.types';\nimport { Box, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const indexSwipeTypeRef = [SwipeType.RemoteDuo, SwipeType.ShareScreenDuo, SwipeType.SoloSpeedRound, SwipeType.LoveItOrLoseIt, SwipeType.CuratedList, SwipeType.DealersChoice];\nexport const ElectioCarouselItem = _ref => {\n  let {\n    slideContentIndex\n  } = _ref;\n  const swipeTypeTitle = indexSwipeTypeRef[slideContentIndex];\n  const swipeTypeCopy = getCarouselInfoDetails()[swipeTypeTitle];\n  const swipeTypeTitleText = getTooltipSwipeTitles()[swipeTypeTitle];\n  const swipeTypeTitleIcon = getSwipeTypeTitleIcons()[swipeTypeTitle];\n  const currentRoute = getNavigationSwipeRoutePaths()[swipeTypeTitle];\n  const handleRenderButton = () => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      href: currentRoute,\n      sx: {\n        background: 'transparent',\n        border: 'none'\n      },\n      children: \"Swipe Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: \"90%\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 4\n  }, this);\n};\n_c = ElectioCarouselItem;\nvar _c;\n$RefreshReg$(_c, \"ElectioCarouselItem\");","map":{"version":3,"names":["React","getCarouselInfoDetails","getNavigationSwipeRoutePaths","getSwipeTypeTitleIcons","getTooltipSwipeTitles","SwipeType","Box","Button","jsxDEV","_jsxDEV","indexSwipeTypeRef","RemoteDuo","ShareScreenDuo","SoloSpeedRound","LoveItOrLoseIt","CuratedList","DealersChoice","ElectioCarouselItem","_ref","slideContentIndex","swipeTypeTitle","swipeTypeCopy","swipeTypeTitleText","swipeTypeTitleIcon","currentRoute","handleRenderButton","variant","href","sx","background","border","children","fileName","_jsxFileName","lineNumber","columnNumber","width","_c","$RefreshReg$"],"sources":["/Users/NicRockwood/Desktop/electio-app/frontend/src/components/electio-carousel/electio-carousel-item/electio-carousel-item.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport { ContainerCardStatic } from '../../common/container-card-static/container-card-static'\nimport { ContentPanelItem } from '../../common/content-panel-item'\nimport {\n  getCarouselInfoDetails,\n  getNavigationSwipeRoutePaths,\n  getSwipeTypeTitleIcons,\n  getTooltipSwipeTitles,\n  SwipeType,\n} from '../electio-carousel.types'\nimport { Box, Button, Card, Link } from '@mui/material'\n\nexport interface ElectioCarouselItemProps {\n  slideContentIndex: number\n}\n\nexport const indexSwipeTypeRef = [\n  SwipeType.RemoteDuo,\n  SwipeType.ShareScreenDuo,\n  SwipeType.SoloSpeedRound,\n  SwipeType.LoveItOrLoseIt,\n  SwipeType.CuratedList,\n  SwipeType.DealersChoice,\n]\n\nexport const ElectioCarouselItem: React.FC<ElectioCarouselItemProps> = ({\n  slideContentIndex,\n}: ElectioCarouselItemProps) => {\n  const swipeTypeTitle = indexSwipeTypeRef[slideContentIndex]\n  const swipeTypeCopy = getCarouselInfoDetails()[swipeTypeTitle]\n  const swipeTypeTitleText = getTooltipSwipeTitles()[swipeTypeTitle]\n  const swipeTypeTitleIcon = getSwipeTypeTitleIcons()[swipeTypeTitle]\n  const currentRoute = getNavigationSwipeRoutePaths()[swipeTypeTitle]\n\n  const handleRenderButton = () => {\n    return (\n      <Button\n        variant=\"outlined\"\n        href={currentRoute}\n        sx={{ background: 'transparent', border: 'none' }}\n      >\n        Swipe Now\n      </Button>\n    )\n  }\n\n  return (\n   <Box width=\"90%\">\n\n   </Box>\n  )\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAI9B,SACEC,sBAAsB,EACtBC,4BAA4B,EAC5BC,sBAAsB,EACtBC,qBAAqB,EACrBC,SAAS,QACJ,2BAA2B;AAClC,SAASC,GAAG,EAAEC,MAAM,QAAoB,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMvD,OAAO,MAAMC,iBAAiB,GAAG,CAC/BL,SAAS,CAACM,SAAS,EACnBN,SAAS,CAACO,cAAc,EACxBP,SAAS,CAACQ,cAAc,EACxBR,SAAS,CAACS,cAAc,EACxBT,SAAS,CAACU,WAAW,EACrBV,SAAS,CAACW,aAAa,CACxB;AAED,OAAO,MAAMC,mBAAuD,GAAGC,IAAA,IAEvC;EAAA,IAFwC;IACtEC;EACwB,CAAC,GAAAD,IAAA;EACzB,MAAME,cAAc,GAAGV,iBAAiB,CAACS,iBAAiB,CAAC;EAC3D,MAAME,aAAa,GAAGpB,sBAAsB,EAAE,CAACmB,cAAc,CAAC;EAC9D,MAAME,kBAAkB,GAAGlB,qBAAqB,EAAE,CAACgB,cAAc,CAAC;EAClE,MAAMG,kBAAkB,GAAGpB,sBAAsB,EAAE,CAACiB,cAAc,CAAC;EACnE,MAAMI,YAAY,GAAGtB,4BAA4B,EAAE,CAACkB,cAAc,CAAC;EAEnE,MAAMK,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,oBACEhB,OAAA,CAACF,MAAM;MACLmB,OAAO,EAAC,UAAU;MAClBC,IAAI,EAAEH,YAAa;MACnBI,EAAE,EAAE;QAAEC,UAAU,EAAE,aAAa;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAC,QAAA,EACnD;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAEb,CAAC;EAED,oBACC1B,OAAA,CAACH,GAAG;IAAC8B,KAAK,EAAC;EAAK;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEV;AAET,CAAC;AAAAE,EAAA,GA1BYpB,mBAAuD;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}