{"ast":null,"code":"var _jsxFileName = \"/Users/NicRockwood/Desktop/electio-app/frontend/src/components/login-page/login-page.tsx\",\n  _s = $RefreshSig$();\n//template for login page taken from https://github.com/mui/material-ui/blob/v5.11.9/docs/data/material/getting-started/templates/sign-in-side/SignInSide.js\n\nimport * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Box } from '@mui/material';\nimport ElectioLogoWithText from '../../assets/ElectioLogo-WithText.png';\nimport ManOnPhone from '../../assets/ManOnPhone.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\nconst homePageCardCopy = ['Excited to spend the night watching a movie with friends and family, or maybe with just yourself, only to spend an hour endlessly browsing Netflix with no relief in sight?', \"We totally feel you, and that's why we built Electio! The average person wastes 30 minutes a day browsing Netflex.\", \"So let us take care of the boring stuff! We'll keep track of your preferences to provide the best swiping experience, everytime.\", 'Electio works just like Tindr: swipe Right for yes, swipe Left for no. Use one of our decision making decks to swipe through either different sets of movies and Electio will do the rest.'];\nfunction LoginPage() {\n  _s();\n  const navigate = useNavigate();\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.target);\n    console.log({\n      email: data.get('email'),\n      password: data.get('password')\n    });\n    //check login against data in server\n    //test\n\n    navigate('/mainPage');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      component: \"main\",\n      sx: {\n        height: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: false,\n        sm: 4,\n        md: 7,\n        sx: {\n          backgroundImage: `url(${ElectioLogoWithText})`,\n          backgroundRepeat: 'no-repeat',\n          backgroundColor: '#aebbd3',\n          backgroundSize: '30%',\n          backgroundPosition: 'center'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        md: 5,\n        component: Paper,\n        elevation: 6,\n        square: true,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            my: 8,\n            mx: 4,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(ElectioCard, {\n            cardTitle: 'So, what is Electio?',\n            content: homePageCardCopy,\n            imgSrc: ManOnPhone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useNavigate","CssBaseline","Paper","Grid","createTheme","ThemeProvider","Box","ElectioLogoWithText","ManOnPhone","jsxDEV","_jsxDEV","theme","homePageCardCopy","LoginPage","_s","navigate","handleSubmit","event","preventDefault","data","FormData","target","console","log","email","get","password","children","container","component","sx","height","fileName","_jsxFileName","lineNumber","columnNumber","item","xs","sm","md","backgroundImage","backgroundRepeat","backgroundColor","backgroundSize","backgroundPosition","elevation","square","my","mx","display","flexDirection","alignItems","ElectioCard","cardTitle","content","imgSrc","_c","$RefreshReg$"],"sources":["/Users/NicRockwood/Desktop/electio-app/frontend/src/components/login-page/login-page.tsx"],"sourcesContent":["//template for login page taken from https://github.com/mui/material-ui/blob/v5.11.9/docs/data/material/getting-started/templates/sign-in-side/SignInSide.js\n\nimport * as React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport Button from '@mui/material/Button'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport TextField from '@mui/material/TextField'\nimport Paper from '@mui/material/Paper'\nimport Grid from '@mui/material/Grid'\nimport Typography from '@mui/material/Typography'\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\nimport { Box, Checkbox, FormControlLabel, FormGroup } from '@mui/material'\n\nimport ElectioLogoWithText from '../../assets/ElectioLogo-WithText.png'\nimport ManOnPhone from '../../assets/ManOnPhone.svg'\n\nconst theme = createTheme()\n\nconst homePageCardCopy = [\n  'Excited to spend the night watching a movie with friends and family, or maybe with just yourself, only to spend an hour endlessly browsing Netflix with no relief in sight?',\n  \"We totally feel you, and that's why we built Electio! The average person wastes 30 minutes a day browsing Netflex.\",\n  \"So let us take care of the boring stuff! We'll keep track of your preferences to provide the best swiping experience, everytime.\",\n  'Electio works just like Tindr: swipe Right for yes, swipe Left for no. Use one of our decision making decks to swipe through either different sets of movies and Electio will do the rest.',\n]\n\nfunction LoginPage() {\n  const navigate = useNavigate()\n\n  const handleSubmit = (event: React.BaseSyntheticEvent) => {\n    event.preventDefault()\n    const data = new FormData(event.target)\n    console.log({\n      email: data.get('email'),\n      password: data.get('password'),\n    })\n    //check login against data in server\n    //test\n\n    navigate('/mainPage')\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"main\" sx={{ height: '100vh' }}>\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage: `url(${ElectioLogoWithText})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundColor: '#aebbd3',\n            backgroundSize: '30%',\n            backgroundPosition: 'center',\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <ElectioCard\n              cardTitle={'So, what is Electio?'}\n              content={homePageCardCopy}\n              imgSrc={ManOnPhone}\n            />\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  )\n}\n\nexport default LoginPage\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}