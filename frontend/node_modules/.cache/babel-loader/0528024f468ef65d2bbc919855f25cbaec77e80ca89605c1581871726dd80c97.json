{"ast":null,"code":"var _jsxFileName = \"/Users/NicRockwood/Desktop/electio-app/frontend/src/components/electio-card/electio-card.tsx\";\nimport * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ElectioCard = _ref => {\n  let {\n    cardTitle,\n    imgSrc,\n    content,\n    c\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 345\n    },\n    children: [imgSrc && /*#__PURE__*/_jsxDEV(CardMedia, {\n      sx: {\n        height: 140\n      },\n      image: imgSrc,\n      title: \"green iguana\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"div\",\n        children: \"So what exactly is Electio?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        children: \"Share\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        children: \"Learn More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = ElectioCard;\nvar _c;\n$RefreshReg$(_c, \"ElectioCard\");","map":{"version":3,"names":["React","Card","CardActions","CardContent","CardMedia","Button","Typography","jsxDEV","_jsxDEV","ElectioCard","_ref","cardTitle","imgSrc","content","c","sx","maxWidth","children","height","image","title","fileName","_jsxFileName","lineNumber","columnNumber","gutterBottom","variant","component","color","size","_c","$RefreshReg$"],"sources":["/Users/NicRockwood/Desktop/electio-app/frontend/src/components/electio-card/electio-card.tsx"],"sourcesContent":["import * as React from 'react'\nimport Card from '@mui/material/Card'\nimport CardActions from '@mui/material/CardActions'\nimport CardContent from '@mui/material/CardContent'\nimport CardMedia from '@mui/material/CardMedia'\nimport Button from '@mui/material/Button'\nimport Typography from '@mui/material/Typography'\n\nexport interface ElectioCardProps {\n  cardTitle: string\n  imgSrc?: string\n  content?: string[]\n}\n\nexport const ElectioCard: React.FC<ElectioCardProps> = ({\n  cardTitle,\n  imgSrc,\n  content,\n  c\n}: ElectioCardProps) => {\n  return (\n    <Card sx={{ maxWidth: 345 }}>\n      {imgSrc && (\n        <CardMedia sx={{ height: 140 }} image={imgSrc} title=\"green iguana\" />\n      )}\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\n          So what exactly is Electio?\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\"></Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">Share</Button>\n        <Button size=\"small\">Learn More</Button>\n      </CardActions>\n    </Card>\n  )\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQjD,OAAO,MAAMC,WAAuC,GAAGC,IAAA,IAK/B;EAAA,IALgC;IACtDC,SAAS;IACTC,MAAM;IACNC,OAAO;IACPC;EACgB,CAAC,GAAAJ,IAAA;EACjB,oBACEF,OAAA,CAACP,IAAI;IAACc,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAI,CAAE;IAAAC,QAAA,GACzBL,MAAM,iBACLJ,OAAA,CAACJ,SAAS;MAACW,EAAE,EAAE;QAAEG,MAAM,EAAE;MAAI,CAAE;MAACC,KAAK,EAAEP,MAAO;MAACQ,KAAK,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpE,eACDhB,OAAA,CAACL,WAAW;MAAAc,QAAA,gBACVT,OAAA,CAACF,UAAU;QAACmB,YAAY;QAACC,OAAO,EAAC,IAAI;QAACC,SAAS,EAAC,KAAK;QAAAV,QAAA,EAAC;MAEtD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eACbhB,OAAA,CAACF,UAAU;QAACoB,OAAO,EAAC,OAAO;QAACE,KAAK,EAAC;MAAgB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAc;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpD,eACdhB,OAAA,CAACN,WAAW;MAAAe,QAAA,gBACVT,OAAA,CAACH,MAAM;QAACwB,IAAI,EAAC,OAAO;QAAAZ,QAAA,EAAC;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACnChB,OAAA,CAACH,MAAM;QAACwB,IAAI,EAAC,OAAO;QAAAZ,QAAA,EAAC;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACT;AAEX,CAAC;AAAAM,EAAA,GAvBYrB,WAAuC;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}